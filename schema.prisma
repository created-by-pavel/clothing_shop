datasource db {
  provider = "postgresql"
  url      = "postgres://shop_database_crbpavel:eP6wftnfErnUbM8c9etOyBQo0LCx9tgi@dpg-cg3fo2t269v3bpa32su0-a.frankfurt-postgres.render.com/shop_database_z7fr"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  secondName  String
  password String
  email    String   @unique
  DateOfBirth      DateTime?
  orders   Order[]
  role Role
}

model Order {
  id         Int        @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user       User?      @relation(fields: [userId], references: [id])
  userId     Int
  products   Product[]  @relation("OrderProduct")
  status    Status
  promocode Promocode?
  @@map(name: "Order")
}

model Promocode {
  id         Int        @id @default(autoincrement())
  code      String      @unique
  expiredDate DateTime?
  order      Order      @relation(fields: [id], references: [id])
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  size        Size
  description String?
  price       Float
  images      String[]
  orders      Order[] @relation("OrderProduct")
  collection  Collection? @relation(fields: [collectionId], references: [id])
  collectionId Int?
}

model Collection {
    id          Int     @id @default(autoincrement())
    year        DateTime
    season      Season
    products Product[]
}

enum Role {
  USER
  ADMIN
}

enum Status {
  WAITING_FOR_DISPATCH
  DISPATCHED
  DELIVERED
}

enum Size {
  S
  M
  L
  XL
}

enum Season {
    WINTER
    SUMMER
    SPRING
    AUTUMN
}






